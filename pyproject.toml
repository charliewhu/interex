[project]
name = "interex"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "sqlalchemy>=2.0.32",
    "httpx>=0.27.2",
    "fastapi[standard]>=0.112.2",
    "websockets>=13.0.1",
    "pytest-xdist>=3.6.1",
    "attrs>=24.2.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/ui", 'src/domain', 'src/service_layer']

[tool.uv]
dev-dependencies = [
    "pytest>=8.3.2",
    "pre-commit>=3.8.0",
    "pyright>=1.1.378",
    "coverage>=7.6.1",
    "ruff>=0.6.3",
]

[tool.pyright]
include = ["src", "tests"]
venvPath = "."
venv = ".venv"

[tool.pytest.ini_options]
addopts = ['--strict-markers', '--strict-config', '-ra']
testpaths = ['tests/']

[tool.coverage.html]
skip_covered = true
skip_empty = true

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_also = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
]
